"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

from dotenv import load_dotenv
from environs import Env

# Charger le fichier .env
load_dotenv()

env = Env()
env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
DB_SUFFIX = os.getenv("DB_SUFFIX", "dev")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("DJANGO_SECRET_KEY")
DEBUG = env.bool("DJANGO_DEBUG", default=True)
# ALLOWED_HOSTS = env.list("DJANGO_ALLOWED_HOSTS", default=["127.0.0.1", "localhost"])

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = env.list("DJANGO_ALLOWED_HOSTS", default=["127.0.0.1", "localhost"])

ALLOWED_HOSTS = [
    "127.0.0.1", "localhost",
    "f14af32db061.ngrok-free.app",  # <- ton domaine ngrok actuel
]

CSRF_TRUSTED_ORIGINS = [
    "https://f14af32db061.ngrok-free.app",
]

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "core",
    "store",
    "downloads",
    ]


MIDDLEWARE = [
"django.middleware.security.SecurityMiddleware",
"whitenoise.middleware.WhiteNoiseMiddleware",
"django.contrib.sessions.middleware.SessionMiddleware",
"django.middleware.common.CommonMiddleware",
"django.middleware.csrf.CsrfViewMiddleware",
"django.contrib.auth.middleware.AuthenticationMiddleware",
"django.contrib.messages.middleware.MessageMiddleware",
"django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": [BASE_DIR / "templates"],
            "APP_DIRS": True,
            "OPTIONS": {
                "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


WSGI_APPLICATION = "config.wsgi.application"
ASGI_APPLICATION = "config.asgi.application"


DATABASES = {
        "default": {
        "ENGINE": "django.db.backends.sqlite3",
         "NAME": BASE_DIR / f"db_{DB_SUFFIX}.sqlite3",
    }
}

# (optionnel) log rapide du fichier DB en dev
if os.getenv("PRINT_DB_PATH") == "1":
    print(f"[settings] Using DB file: {DATABASES['default']['NAME']}")

AUTH_PASSWORD_VALIDATORS = []


LANGUAGE_CODE = "fr-fr"
TIME_ZONE = "Africa/Bamako"
USE_I18N = True
USE_TZ = True


STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / "static"]
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"


MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"


DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"



CINETPAY_SITE_ID = os.getenv("CINETPAY_SITE_ID")
CINETPAY_API_KEY = os.getenv("CINETPAY_API_KEY")
CINETPAY_SECRET_KEY = os.getenv("CINETPAY_SECRET_KEY")
CINETPAY_ENV = os.getenv("CINETPAY_ENV", "sandbox")
CINETPAY_BASE_URL = os.getenv("CINETPAY_BASE_URL", "https://api-checkout.cinetpay.com/v2/payment") 
# URLs publiques de ton site
CINETPAY_RETURN_URL = os.getenv("CINETPAY_RETURN_URL", "https://tondomaine/offres/retour/")
CINETPAY_NOTIFY_URL = os.getenv("CINETPAY_NOTIFY_URL", "https://tondomaine/offres/notify/")


# settings.py (dev)
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
